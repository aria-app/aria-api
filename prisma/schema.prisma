datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Note {
  id         Int      @id @default(autoincrement())
  points     Json     @default("[]")
  sequence   Sequence @relation(fields: [sequenceId], references: [id])
  sequenceId Int
}

enum Role {
  ADMIN
  USER
}

model Sequence {
  id           Int    @id @default(autoincrement())
  measureCount Int
  notes        Note[]
  position     Int
  track        Track  @relation(fields: [trackId], references: [id])
  trackId      Int
}

model Song {
  bpm          Int
  createdAt    DateTime @default(now())
  id           Int      @id @default(autoincrement())
  measureCount Int
  name         String
  updatedAt    DateTime @updatedAt
  tracks       Track[]
  user         User     @relation(fields: [userId], references: [id])
  userId       Int

  @@unique([name, userId])
}

model Track {
  id        Int        @id @default(autoincrement())
  isMuted   Boolean    @default(false)
  isSoloing Boolean    @default(false)
  position  Int
  sequences Sequence[]
  song      Song       @relation(fields: [songId], references: [id])
  songId    Int
  voice     Voice      @relation(fields: [voiceId], references: [id])
  voiceId   Int
  volume    Int        @default(0)

  @@unique([position, songId])
}

model User {
  createdAt DateTime @default(now())
  email     String   @unique
  firstName String
  id        Int      @id @default(autoincrement())
  role      Role     @default(USER)
  lastName  String
  password  String
  songs     Song[]
}

model Voice {
  id                 Int     @id @default(autoincrement())
  name               String
  toneOscillatorType String
  tracks             Track[]
}
